@using globals.Models
@using globals;
@namespace TestArtem.Components.Modules

<div class="row">
    <div class="col-12">
        <div class="tm-categories-container">
            <h3 class="tm-text-primary tm-categories-text">Filter:</h3>
            <ul class="nav tm-category-list" role="tablist">
                <li class="nav-item tm-category-item" role="presentation">
                    <button id="showAll" class="nav-link @GetActiveFlag(Bestellstatus.alle) tm-category-link @GetActiveFlag(Bestellstatus.alle)" @onclick="(() => FilterBestellungen(Bestellstatus.alle))">Alle</button>
                </li>
                <li class="nav-item tm-category-item" role="presentation">
                    <button id="showNeue" @onclick="(() => FilterBestellungen(Bestellstatus.neu))" class="nav-link @GetActiveFlag(Bestellstatus.neu) tm-category-link @GetActiveFlag(Bestellstatus.neu)">Neue</button>
                </li>
                <li class="nav-item tm-category-item" role="presentation">
                    <button id="showBestatigte" @onclick="(() => FilterBestellungen(Bestellstatus.gesehen))" class="nav-link @GetActiveFlag(Bestellstatus.gesehen) tm-category-link @GetActiveFlag(Bestellstatus.gesehen)">Bestätigte</button>
                </li>
                <li class="nav-item tm-category-item" role="presentation">
                    <button id="showGedruckt" @onclick="(()=> FilterBestellungen(Bestellstatus.gedruckt))" class="nav-link @GetActiveFlag(Bestellstatus.gedruckt) tm-category-link @GetActiveFlag(Bestellstatus.gedruckt)">Etiketten gedruckt</button>
                </li>
            </ul>
        </div>
    </div>
</div>

<div class="table-responsive custom_table tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
        <table class="table table-striped table-sm" id="ordersTable">
            <thead class="table-dark">
                <tr>
                    <th></th>
                    <th>Lfd. Nr.</th>
                    <th>Ankäufer</th>
                    <th>Datum</th>
                    <th>Zeit</th>
                    <th>Kunde</th>
                    <th>Artikel</th>
                    <th>VP</th>
                    <th>Menge</th>
                    <th>Preis</th>
                    <th>Bemerkung</th>
                    <th>Container</th>
                    <th>Besteller</th>
                    <th>Status</th>
                    <th>Stk/cc</th>
                </tr>
            </thead>
            <tbody id="ordersTableBody">
                @foreach (var bestellung in _filteredBestellungen)
                {
                    <tr class="@GetStatusClass(bestellung.Status_bg)" data-status="@bestellung.Status_bg">
                        <th>
                            <label class="switch">
                                <input type="checkbox" class="childCheckbox">
                                <span class="slider"></span>
                            </label>
                        </th>
                        <td>@bestellung.LfdNr</td>
                        <td>@bestellung.Ankaeufer</td>
                        <td>@bestellung.Datum.ToString("dd.MM.yyyy")</td>
                        <td>@bestellung.Zeit.ToString("HH:mm")</td>
                        <td>@bestellung.Kunde</td>
                        <td>@bestellung.Artikel</td>
                        <td>@bestellung.VP</td>
                        <td>@bestellung.Menge</td>
                        <td>@bestellung.Einzelpreis</td>
                        <td>@bestellung.Bemerkung</td>
                        <td>@bestellung.Container</td>
                        <td>@bestellung.Besteller</td>
                        <td>@bestellung.Status_bg</td>
                        <td>@bestellung.StkCC</td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="bottom_links">
            <label class="switch">
                <input type="checkbox" id="mainCheckbox">
                <span class="slider"></span>
            </label>
            Alle Auswählen
        </div>
    </div>
</div>

<script>
    $('#mainCheckbox').click(function () {
        $('.childCheckbox').prop('checked', this.checked);
    });
</script>



@code {
    private List<Bestellung> _allBestellungen = new List<Bestellung>();
    private List<Bestellung> _filteredBestellungen = new List<Bestellung>();
    private int ActiveBestellstatus = Bestellstatus.alle;

    protected override async Task OnInitializedAsync()
    {
        SetDemoData();
        FilterBestellungen(ActiveBestellstatus); // Show all orders by default
    }

    private void SetDemoData()
    {
        _allBestellungen.Clear();
        _allBestellungen.Add(new Bestellung
            {
                LfdNr = 382218,
                Ankaeufer = "elbers",
                Datum = DateTime.Now,
                Zeit = DateTime.Now,
                Kunde = "6",
                Artikel = "Call vulg. GG Sunset Trio 11 cm Trio",
                VP = "DN",
                Menge = "80 X 8",
                StueckJePalette = 8,
                GesamtanzahlNetto = 640,
                Einzelpreis = 1.5,
                Bemerkung = "Bemerkung für diese Bestellung",
                Container = "Tag 5",
                Besteller = "Daniel",
                Status_bg = "gedruckt",
                StkCC = 40
            });
        _allBestellungen.Add(new Bestellung
            {
                LfdNr = 382219,
                Ankaeufer = "elbers",
                Datum = DateTime.Now,
                Zeit = DateTime.Now,
                Kunde = "22",
                Artikel = "* Ampelpflanzen  xyz",
                VP = "DN",
                Menge = "42 X 4",
                StueckJePalette = 4,
                GesamtanzahlNetto = 40,
                Einzelpreis = 2.5,
                Bemerkung = "Bemerkung für diese Bestellung",
                Container = "Tag 2",
                Besteller = "Daniel",
                Status_bg = "bestätigt",
                StkCC = 20
            });
        _allBestellungen.Add(new Bestellung{
            LfdNr = 382219,
            Ankaeufer = "elbers",
            Datum = DateTime.Now,
            Zeit = DateTime.Now,
            Kunde = "22",
            Artikel = "* Ampelpflanzen  xyz",
            VP = "DN",
            Menge = "42 X 4",
            StueckJePalette = 4,
            GesamtanzahlNetto = 40,
            Einzelpreis = 2.5,
            Bemerkung = "Bemerkung für diese Bestellung",
            Container = "Tag 2",
            Besteller = "Daniel",
            Status_bg = "bestätigt",
            StkCC = 20
        });

        _allBestellungen.Add(new Bestellung
        {
            LfdNr = 382220,
            Ankaeufer = "test test",
            Datum = DateTime.Now,
            Zeit = DateTime.Now,
            Kunde = "777",
            Artikel = "Item",
            VP = "DN",
            Menge = "7 X 5",
            StueckJePalette = 4,
            GesamtanzahlNetto = 40,
            Einzelpreis = 2.5,
            Bemerkung = "Bemerkung für diese Bestellung",
            Container = "Tag 10",
            Besteller = "John Doi",
            Status_bg = "neu",
            StkCC = 20
        });
        _allBestellungen.Add(new Bestellung    {
                LfdNr = 382220,
                Ankaeufer = "test test",
                Datum = DateTime.Now,
                Zeit = DateTime.Now,
                Kunde = "777",
                Artikel = "Item",
                VP = "DN",
                Menge = "7 X 5",
                StueckJePalette = 4,
                GesamtanzahlNetto = 40,
                Einzelpreis = 2.5,
                Bemerkung = "Bemerkung für diese Bestellung",
                Container = "Tag 10",
                Besteller = "John Doi",
                Status_bg = "neu",
                StkCC = 20
            });
    }

    private void FilterBestellungen(int status)
    {
        _filteredBestellungen = status switch
        {
            Bestellstatus.neu => _allBestellungen.Where(b => b.Status_bg == "neu").ToList(),
            Bestellstatus.bestaetigt => _allBestellungen.Where(b => b.Status_bg == "bestätigt").ToList(),
            Bestellstatus.gedruckt => _allBestellungen.Where(b => b.Status_bg == "gedruckt").ToList(),
            _ => _allBestellungen // Show all orders
        };
        ActiveBestellstatus = status;
        
        StateHasChanged();
    }

    private string GetActiveFlag(int status)
    {
        return (ActiveBestellstatus == status) ? "active" : "";
    }

    private string GetStatusClass(string status)
    {
        return status switch
        {
            "gedruckt" => "table-success",
            "bestätigt" => "table-danger",
            "neu" => "table-primary",
            _ => ""
        };
    }

  

}
